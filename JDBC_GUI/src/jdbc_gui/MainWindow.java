package jdbc_gui;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.DatabaseMetaData;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;


/*
 * @author reihox14
 */
public class MainWindow extends javax.swing.JFrame {
    Connection con=null;
    DatabaseMetaData md=null;
    String PrimaryKey=null;
    int pkPosition=0;
    
    public MainWindow() {
        initComponents();
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
        } catch (ClassNotFoundException ex) {
            System.out.println("Couldn't get Driver");
            javax.swing.JOptionPane.showMessageDialog(this,"thank you");
            System.exit(1);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lbServer = new javax.swing.JLabel();
        lbPort = new javax.swing.JLabel();
        txtServerLocalhost = new javax.swing.JTextField();
        txtPort3306 = new javax.swing.JTextField();
        BtConnect = new javax.swing.JButton();
        BtDisconnect = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        lbUsername = new javax.swing.JLabel();
        lbPassword = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        lbDatabase = new javax.swing.JLabel();
        txtDatabase = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbServer.setText("Server:");

        lbPort.setText("Port:");

        txtServerLocalhost.setText("localhost");
        txtServerLocalhost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtServerLocalhostActionPerformed(evt);
            }
        });

        txtPort3306.setText("3306");
        txtPort3306.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPort3306ActionPerformed(evt);
            }
        });

        BtConnect.setText("Connect");
        BtConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtConnectActionPerformed(evt);
            }
        });

        BtDisconnect.setText("Disconnect");
        BtDisconnect.setEnabled(false);
        BtDisconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtDisconnectActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(jTable2);

        lbUsername.setText("Username");

        lbPassword.setText("Password");

        txtUsername.setText("root");

        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        lbDatabase.setText("Database");

        txtDatabase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDatabaseActionPerformed(evt);
            }
        });

        btnDelete.setText("jButton1");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbServer)
                        .addGap(18, 18, 18)
                        .addComponent(txtServerLocalhost, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbPort)
                        .addGap(30, 30, 30)
                        .addComponent(txtPort3306, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbPassword)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbUsername)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(lbDatabase)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BtDisconnect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BtConnect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(47, 47, 47))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbServer)
                    .addComponent(txtServerLocalhost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtConnect)
                    .addComponent(lbUsername)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbDatabase)
                    .addComponent(txtDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPort3306, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbPort)
                        .addComponent(lbPassword)
                        .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnDelete))
                    .addComponent(BtDisconnect))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtServerLocalhostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtServerLocalhostActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtServerLocalhostActionPerformed

    private void txtPort3306ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPort3306ActionPerformed
        
    }//GEN-LAST:event_txtPort3306ActionPerformed

    private void BtDisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtDisconnectActionPerformed
       Connection con=null; 
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost/World", "root", "");
            javax.swing.JOptionPane.showMessageDialog(this,"Disconnected from database.");
            BtConnect.setEnabled(true);
            txtServerLocalhost.setEnabled(true);
            txtPort3306.setEnabled(true);
            BtDisconnect.setEnabled(false);
            btnDelete.setEnabled(false);
            lbUsername.setEnabled(true);
            txtDatabase.setEnabled(true);
            txtPassword.setEnabled(true);
        } catch (SQLException ex) {
           javax.swing.JOptionPane.showMessageDialog(this,"Disconnected from database.");
            }
    }//GEN-LAST:event_BtDisconnectActionPerformed

    private void BtConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtConnectActionPerformed

        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost/world", "root", "");
            md=con.getMetaData();
            ResultSet res_prim=md.getPrimaryKeys(null,null,"city");
            javax.swing.JOptionPane.showMessageDialog(this,"Connected to database.");

            res_prim.next();
            System.out.println("Primary Key: "+res_prim.getString(4));
            PrimaryKey=res_prim.getString(4);
            pkPosition=res_prim.getInt("KEY_SEQ")-1;
            System.out.println("pkPosition: "+ pkPosition);
            ResultSet res=md.getColumns(null,null,"city",null);//nur im console mit sout
            //DefaultTableModel tableModel=new DefaultTableModel();//auch im Gui
            Our_TableModel tableModel=new Our_TableModel(pkPosition);//damit wir ID nicht andern konnen.
            int num_cols=0;
            while(res.next()){
                tableModel.addColumn(res.getString(4));
                //System.out.println(res.getString(4));
                num_cols++;
            }
            
            Statement stmt=con.createStatement();
            res=stmt.executeQuery("SELECT * FROM city");
            while(res.next()){
                Object[] arr=new Object[num_cols];
                //jedes Element in res.next() in array legen
                for(int i=0;i<num_cols;i++){
                    arr[i]=res.getObject(i+1);
                }
                tableModel.addRow(arr);
            }
                tableModel.addTableModelListener(new TableModelListener(){


                @Override
                public void tableChanged(TableModelEvent e) {
                    tableModelChanged(e);
                    System.out.println("Table changed.");
                    //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }
        });
            jTable2.setModel(tableModel);
            BtConnect.setEnabled(false);
            btnDelete.setEnabled(true);
            txtServerLocalhost.setEnabled(false);
            txtPort3306.setEnabled(false);
            BtDisconnect.setEnabled(true);
            lbUsername.setEnabled(false);
            txtDatabase.setEnabled(false);
            txtPassword.setEnabled(false);
            
        } catch (SQLException ex) {
            ex.printStackTrace();
           javax.swing.JOptionPane.showMessageDialog(this,"something went wrong during connection.");
        }
    }//GEN-LAST:event_BtConnectActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void txtDatabaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDatabaseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDatabaseActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
         String name = jTable2.getModel().getValueAt(row, pkPosition).toString();
        selItem = ddTable.getSelectedItem().toString();
        try {
            PreparedStatement delete = con.prepareStatement("DELETE FROM "+ddTable.getSelectedItem().toString()+" WHERE "+PrimaryKey+" = ? ");
            delete.setString(1, name);
            System.out.println(delete);
            delete.executeUpdate();
            //tblEntries.setModel(new DefaultTableModel());
            lastRow = row;
            tableModel.addRow(new Object[num_columns]); 
            jTable2.setModel(tableModel);
            ddDatabase.setSelectedItem(ddDatabase.getSelectedItem());
            
            //tblEntries.setModel(new DefaultTableModel());
        } catch (SQLException ex) {
            System.out.println("Error delteing Column");
            javax.swing.JOptionPane.showMessageDialog(this,"Cannot delete column.","Database error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed
        public void tableModelChanged(TableModelEvent e ){
            int row=e.getFirstRow();
            String columnName= jTable2.getModel().getColumnName(e.getColumn());
                    //anderungen sehen,aber nicht im Database!!
            int id=Integer.parseInt(jTable2.getModel().getValueAt(row, pkPosition).toString());
            String entry_changed=jTable2.getModel().getValueAt(row,e.getColumn()).toString();
            try{
                 //PreparedStatement update=con.prepareStatement("UPDATE city SET ? = ? WHERE ? = ?");
                 PreparedStatement update=con.prepareStatement("UPDATE city SET " + columnName + "= ? WHERE "+PrimaryKey+" = ?");
                 //update.setString(1,columnName);
                 update.setString(1,entry_changed);
                 //update.setString(3,PrimaryKey);
                 update.setInt(2,id);
                 update.executeUpdate();
                 System.out.println(update);
                 System.out.println("Row changed");
                } catch(SQLException ex){
                    System.out.println(" Column " + columnName + " changed at row " + row + " and ID " + id);
                    
                    }
                }
    public static void main(String args[]) {
            java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtConnect;
    private javax.swing.JButton BtDisconnect;
    private javax.swing.JButton btnDelete;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lbDatabase;
    private javax.swing.JLabel lbPassword;
    private javax.swing.JLabel lbPort;
    private javax.swing.JLabel lbServer;
    private javax.swing.JLabel lbUsername;
    private javax.swing.JTextField txtDatabase;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtPort3306;
    private javax.swing.JTextField txtServerLocalhost;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
